"""empty message

Revision ID: 5da14a4e4c7a
Revises: 
Create Date: 2018-07-26 18:58:46.019785

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "5da14a4e4c7a"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "channel",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("url", sa.String(length=2048), nullable=False),
        sa.Column("description", sa.String(length=50000), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=False),
        sa.Column("deleted", sa.DateTime(), nullable=True),
        sa.Column("source", sa.String(length=50), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "diversity",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("description", sa.String(length=1000), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "entry",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("type", sa.String(length=128), nullable=False),
        sa.Column("description", sa.String(length=1000), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "event",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("description", sa.String(length=50000), nullable=False),
        sa.Column("url", sa.String(length=2048), nullable=False),
        sa.Column("start", sa.DateTime(), nullable=False),
        sa.Column("end", sa.DateTime(), nullable=False),
        sa.Column("duration", sa.Integer(), nullable=False),
        sa.Column("category", sa.String(length=256), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=False),
        sa.Column("deleted", sa.DateTime(), nullable=True),
        sa.Column("source", sa.String(length=50), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "meetup",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("logo", sa.String(length=1000), nullable=False),
        sa.Column("url", sa.String(length=2048), nullable=False),
        sa.Column("description", sa.String(length=50000), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=False),
        sa.Column("deleted", sa.DateTime(), nullable=True),
        sa.Column("source", sa.String(length=50), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "speaker",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("avatar", sa.String(length=1024), nullable=False),
        sa.Column("bio", sa.String(length=1024), nullable=False),
        sa.Column("contact", sa.String(length=128), nullable=False),
        sa.Column("role", sa.String(length=128), nullable=False),
        sa.Column("location", sa.String(length=128), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=False),
        sa.Column("deleted", sa.DateTime(), nullable=True),
        sa.Column("source", sa.String(length=50), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "topic",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("description", sa.String(length=1000), nullable=True),
        sa.Column("abbreviation", sa.String(length=10), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "video",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("url", sa.String(length=2048), nullable=False),
        sa.Column("description", sa.String(length=50000), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=False),
        sa.Column("deleted", sa.DateTime(), nullable=True),
        sa.Column("source", sa.String(length=50), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "channel_topic_association",
        sa.Column("channel_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("topic_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.ForeignKeyConstraint(["channel_id"], ["channel.id"]),
        sa.ForeignKeyConstraint(["topic_id"], ["topic.id"]),
    )
    op.create_table(
        "event_entry_association",
        sa.Column("event_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("entry_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.ForeignKeyConstraint(["entry_id"], ["entry.id"]),
        sa.ForeignKeyConstraint(["event_id"], ["event.id"]),
    )
    op.create_table(
        "event_meetup_association",
        sa.Column("event_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("meetup_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.ForeignKeyConstraint(["event_id"], ["event.id"]),
        sa.ForeignKeyConstraint(["meetup_id"], ["meetup.id"]),
    )
    op.create_table(
        "event_topic_association",
        sa.Column("event_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("topic_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.ForeignKeyConstraint(["event_id"], ["event.id"]),
        sa.ForeignKeyConstraint(["topic_id"], ["topic.id"]),
    )
    op.create_table(
        "meetup_channel_association",
        sa.Column("meetup_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("channel_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.ForeignKeyConstraint(["channel_id"], ["channel.id"]),
        sa.ForeignKeyConstraint(["meetup_id"], ["meetup.id"]),
    )
    op.create_table(
        "meetup_event_association",
        sa.Column("meetup_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("event_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.ForeignKeyConstraint(["event_id"], ["event.id"]),
        sa.ForeignKeyConstraint(["meetup_id"], ["meetup.id"]),
    )
    op.create_table(
        "meetup_topic_association",
        sa.Column("meetup_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("topic_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.ForeignKeyConstraint(["meetup_id"], ["meetup.id"]),
        sa.ForeignKeyConstraint(["topic_id"], ["topic.id"]),
    )
    op.create_table(
        "speaker_diversity_association",
        sa.Column("speaker_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("diversity_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.ForeignKeyConstraint(["diversity_id"], ["diversity.id"]),
        sa.ForeignKeyConstraint(["speaker_id"], ["speaker.id"]),
    )
    op.create_table(
        "speaker_topic_association",
        sa.Column("speaker_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("topic_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.ForeignKeyConstraint(["speaker_id"], ["speaker.id"]),
        sa.ForeignKeyConstraint(["topic_id"], ["topic.id"]),
    )
    op.create_table(
        "video_channel_association",
        sa.Column("video_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("channel_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.ForeignKeyConstraint(["channel_id"], ["channel.id"]),
        sa.ForeignKeyConstraint(["video_id"], ["video.id"]),
    )
    op.create_table(
        "video_topic_association",
        sa.Column("video_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("topic_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.ForeignKeyConstraint(["topic_id"], ["topic.id"]),
        sa.ForeignKeyConstraint(["video_id"], ["video.id"]),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("video_topic_association")
    op.drop_table("video_channel_association")
    op.drop_table("speaker_topic_association")
    op.drop_table("speaker_diversity_association")
    op.drop_table("meetup_topic_association")
    op.drop_table("meetup_event_association")
    op.drop_table("meetup_channel_association")
    op.drop_table("event_topic_association")
    op.drop_table("event_meetup_association")
    op.drop_table("event_entry_association")
    op.drop_table("channel_topic_association")
    op.drop_table("video")
    op.drop_table("topic")
    op.drop_table("speaker")
    op.drop_table("meetup")
    op.drop_table("event")
    op.drop_table("entry")
    op.drop_table("diversity")
    op.drop_table("channel")
    # ### end Alembic commands ###
