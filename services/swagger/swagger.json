{
  "info": {
    "version": "0.0.1",
    "description": "Swagger spec for documenting the users service",
    "title": "Users Service"
  },
  "paths": {
    "/auth/logout": {
      "get": {
        "security": [{
          "bearerAuth": []
        }],
        "responses": {
          "200": {
            "description": "Successfully logged out"
          }
        },
        "summary": "Logs a user out"
      }
    },
    "/auth/register": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user-full"
              }
            }
          },
          "required": true,
          "description": "User to add"
        },
        "responses": {
          "200": {
            "description": "user object"
          }
        },
        "summary": "Creates a new user"
      }
    },
    "/users/ping": {
      "get": {
        "responses": {
          "200": {
            "description": "Will return 'pong!'"
          }
        },
        "summary": "Just a sanity check"
      }
    },
    "/auth/login": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          },
          "required": true,
          "description": "User to log in"
        },
        "responses": {
          "200": {
            "description": "Successfully logged in"
          }
        },
        "summary": "Logs a user in"
      }
    },
    "/auth/status": {
      "get": {
        "security": [{
          "bearerAuth": []
        }],
        "responses": {
          "200": {
            "description": "user object"
          }
        },
        "summary": "Returns the logged in user's status"
      }
    },
    "/users/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "user object"
          }
        },
        "parameters": [{
          "schema": {
            "type": "integer",
            "format": "int64"
          },
          "required": true,
          "description": "ID of user to fetch",
          "name": "id",
          "in": "path"
        }],
        "summary": "Returns a user based on a single user ID"
      }
    },
    "/users": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user-full"
              }
            }
          },
          "required": true,
          "description": "User to add"
        },
        "security": [{
          "bearerAuth": []
        }],
        "responses": {
          "200": {
            "description": "User added"
          }
        },
        "summary": "Adds a new user"
      },
      "get": {
        "responses": {
          "200": {
            "description": "user object"
          }
        },
        "summary": "Returns all users"
      }
    },
    "/videos": {
      "get": {
        "responses": {
          "200": {
            "description": "Array of video objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/video-full"
                  }
                }
              }
            }
          }
        },
        "summary": "Returns all videos"
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/video-add-payload"
              }
            }
          },
          "required": true,
          "description": "Video to add"
        },
        "security": [{
          "bearerAuth": []
        }],
        "responses": {
          "201": {
            "description": "Video added"
          },
          "202": {
            "description": "Video already exists"
          },
          "400": {
            "description": "Invalid payload"
          }
        },
        "summary": "Adds a video"
      }
    },
    "/videos/{name}": {
      "get": {
        "responses": {
          "200": {
            "description": "Video object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video-full"
                }
              }
            }
          },
          "404": {
            "description": "Video not found"
          }
        },
        "parameters": [{
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Name of the video to fetch",
          "name": "name",
          "in": "path"
        }],
        "summary": "Returns a video based on its name"
      }
    }
  },
  "servers": [{
    "url": "http://my-dev-space-production-alb-453010484.us-east-1.elb.amazonaws.com"
  }],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "scheme": "bearer",
        "type": "http"
      }
    },
    "schemas": {
      "user-full": {
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "user": {
        "properties": {
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "video-add-payload": {
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "topics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "channel": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "video-full": {
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "topics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/topic"
            }
          },
          "channel": {
            "$ref": "#/components/schemas/channel"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "topic": {
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          }
        }
      },
      "channel": {
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "topics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/topic"
            }
          },
          "source": {
            "type": "string"
          }
        }
      }
    }
  },
  "openapi": "3.0.0"
}
